#!/bin/sh
[[ -f ~/.config/murl/config ]] && . ~/.config/murl/config
CACHE_DIR=${cache_dir:-~/.cache/murl}
FLOATWIN=${enable_floatwindow:-false}
DIMENSION=${float_window_dimension:-50%x50%+100+100}
ROFI_THEME=${rofi_theme_path:-~/.config/rofi/themes/launcher.rasi}
PROXY=$proxy

SUB_DIR="$CACHE_DIR/subs"
URLS_MAIN="$CACHE_DIR/main_list.json"
URLS_HIST="$CACHE_DIR/hist_list.json"
OPTS_LIST="$CACHE_DIR/opts_list.json"
PLAYING=`cat $CACHE_DIR/playing 2>/dev/null`
VIDEO_URL=("www.youtube.com" "lbry.tv" "www.bilibili.com" "www.odysee.com")
STREAM_URL=("live.bilibili.com" "www.huya.com" "www.douyu.com")
LIST_TEMP='{"title":" Options","cmd":"murl opts"}'
OPTS_TEMP='{"title":" History","cmd":"murl hist"},
           {"title":" Watch Later","cmd":"murl main"},
           {"title":" Clear playlist","cmd":"rm $URLS_MAIN"},
           {"title":" Clear history","cmd":"rm $URLS_HIST"}'

__rofi() { rofi -multi-select -theme $ROFI_THEME -p "$1" -dmenu -i; }
__get_title() { curl -sL "${HEADER[@]}" "$@" | pup --charset utf8 -p 'title text{}'; }
__notify() { notify-send.py -i mpv -a mpv --replaces-process mpv "$1" "$2" & disown; }
__get_host() { awk -F[/:] '{print $4}' <<< "$@"; }
__pre_process_url() {
  case $HOST in
    www.bilibili.com)
      HEADER=(-H "User-Agent: Mozilla/5.0 (Android 6.0;)")
      URL=$(awk -F? '{print $1}' <<< $URL);;
    live.bilibili.com)
      HEADER=(-H "User-Agent:Chrome/50")
      URL=$(awk -F? '{print $1}' <<< $URL);;
    www.youtube.com)
      URL=`sed 's/&t=.*//' <<< $URL`;;
  esac
}
__bilivideo_subs() {
  bv_num=$(awk -F[:/?] '{print $6}' <<< $URL)
  vid_info=$(curl https://api.bilibili.com/x/player/pagelist?bvid="$bv_num"\&jsonp=jsonp)
  cid=$(jq '.data[0].cid' <<< $vid_info)
  curl -G 'http://api.bilibili.com/x/v1/dm/list.so' \
    --data-urlencode oid=$cid \
    --compressed -o $SUB_DIR/"$bv_num".xml
  danmaku2ass -s 1280x720 -fs 30 -dm 15 -a 0.5 -o $SUB_DIR/"$bv_num".ass $SUB_DIR/"$bv_num".xml
  rm $SUB_DIR/"$bv_num".xml
  SUB="$SUB_DIR/$bv_num.ass"
}
__update_hist_list() {
  local TITLE=$(__get_title "$URL")
  local updated=$(jq --arg t "$TITLE" --arg u "$URL" --arg s "$SUB" \
    '.[length] = {"title":$t,"url": $u,"sub":$s}|unique' "$URLS_HIST")
  jq -s "$updated" > $URLS_HIST
}
__kill() {
  killall qlphelper 2>/dev/null
  while read proc; do
    [[ -n `ps -p $proc -o cmd= | grep $PLAYING` ]] \
    && { kill -9 $proc; break; }
  done <<< "$(pgrep mpv)"
}
__url_play() {
  local url="$1"; local from_list=${2:-false}
  [[ -z "$url" ]] && main || echo "$url" > $CACHE_DIR/playing
  "$from_list" && __kill
  local host=$(__get_host "$url")
  local subfile=$(jq -r --arg u "$url" '.[] | select(.url == $u) | .sub' $URLS_HIST)
  [[ -n "$subfile" ]] && local sub_flag="--sub-file=$subfile"
  command -v floatwin >/dev/null && floatwin_cmd=(floatwin -c mpv:gl -d $DIMENSION)
  url=$(sed 's/&/\\&/' <<< $url)
  video_cmd=(mpv "$sub_flag" '--vf=lavfi=\"fps=60\"' \'$url\')
  stream_cmd=(qlphelper --fa 0.6 -u \'$url\')
  test "$FLOATWIN" == "true" && {
    video_cmd=(${floatwin_cmd[@]} ${video_cmd[@]})
    stream_cmd=(${floatwin_cmd[@]} ${stream_cmd[@]})
  }
  [[ "${VIDEO_URL[@]}" == *"$host"* ]] && eval "exec ${video_cmd[@]}"
  eval "exec ${stream_cmd[@]}"
}
__url_delete() {
  local url=$1 new_list=$(jq --arg u "$url" '.[] | select(.url != $u)' $LIST | jq -s)
  jq -s "$new_list" > $LIST
}
__url_watch_later() {
  local url="$1"
  local sel=$(jq -r --arg u "$url" '.[]|select(.url == $u)|tojson' $URLS_HIST)
  local updated=$(jq --arg i "$sel" '.+[$i|fromjson]|unique' "$URLS_MAIN")
  jq -s "$updated" > $URLS_MAIN
}

_record_url() {
  __pre_process_url
  test -n "$(grep $URL $URLS_HIST)" && return
  __notify "Adding.." "$URL"
  [[ "$HOST" == "www.bilibili.com" ]] && __bilivideo_subs
  __update_hist_list
}
_handle_menu() {
  chosen=$(jq -r '.[] .title' $LIST | __rofi "$1")
  case $chosen in
    "") exit 0;;
    *|*|*) _handle_opt;;
    *) _handle_url;;
  esac
}
_handle_opt() {
   cmd=$(jq -r --arg t "$chosen" '.[] | select(.title == $t) | .cmd' $LIST)
   eval "$cmd"
}
_handle_url() {
  local actions="Play\nDelete\nBack(watch later)"
  [[ "$LIST" == "$URLS_HIST" ]] && actions="Play\nDelete\nWatch later\nBack(history)"
  local chosen_action=$(echo -e "$actions" | __rofi "Action:")
  local url=$(jq -r --arg t "$chosen" '.[] | select(.title == $t) | .url' $LIST)
  case $chosen_action in
    Play) __url_play $url true;;
    Delete) __url_delete $url;;
    "Watch later") __url_watch_later $url;;
    "Back(watch later)") exec murl main;;
    "Back(history)") exec murl hist;;
  esac
}
_init() {
  [ -d $CACHE_DIR ] || mkdir -p $SUB_DIR
  [ -f $URLS_MAIN ] || jq -s "[$LIST_TEMP]" > $URLS_MAIN
  [ -f $URLS_HIST ] || jq -s "[$LIST_TEMP]" > $URLS_HIST
  [ -f $OPTS_LIST ] || jq -s "[$OPTS_TEMP]" > $OPTS_LIST
  eval "$PROXY"
  local clipboard=`xclip -sel clipboard -o 2>/dev/null`
  killall xclip
  URL=${@:-$clipboard}
  local all_host=("${VIDEO_URL[@]}" "${STREAM_URL[@]}")
  local host=`__get_host $URL`; HOST=${host:-void}
  [[ "${all_host[@]}" == *"$HOST"* ]] && _record_url
}
_init "${@:2}"

gen() {
  parser='split("\n")|map(split(" "))|.[]|map(select(length>0))|{"title":.[0],"url":.[1]}'
  jq -s '.' <(printf "$LIST_TEMP") <(jq -R "$parser" ~/.config/murl/list) > $URLS_MAIN
}
main() { LIST=$URLS_MAIN; _handle_menu "Watch later: "; }
hist() { LIST=$URLS_HIST; _handle_menu "History: "; }
opts() { LIST=$OPTS_LIST; _handle_menu "Choose Action: "; }
toggle() { "$FLOATWIN" && __url_play $PLAYING || echo "Floatwin not enabled."; }

"$@"
